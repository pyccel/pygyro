name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  Coverage:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install python dependencies
        uses: ./.github/actions/pip_installation
      - name: Coverage install
        uses: ./.github/actions/coverage_install
      - name: Unit tests
        run: |
          coverage run -p --source=pygyro -m pytest pygyro -m "serial and not long" --short
          make
          coverage run -p --source=pygyro -m pytest pygyro -m serial
          mpirun -n 1 coverage run -p mpi_tester.py pygyro -m parallel --mpisub
          mpirun -n 4 --oversubscribe coverage run -p mpi_tester.py pygyro -m parallel --mpisub
          mpirun -n 6 --oversubscribe coverage run -p mpi_tester.py pygyro -m parallel --mpisub
      - name: Collect coverage information
        continue-on-error: True
        uses: ./.github/actions/coverage_collection
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@master
        continue-on-error: True
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: current_coverage.xml

  Pyccel_Fortran:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Cache pip
        uses: actions/cache@v2
        env:
          cache-name: cache-pip
        with:
          path: ~/.local
          key: ${{runner.os }}-build-${{ env.cache-name }}
      - name: Install python dependencies
        uses: ./.github/actions/pip_installation
      - name: Make with pyccel
        run: |
          make pycc
      - name: Unit tests
        uses: ./.github/actions/pytest_run

  Pyccel_C:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Cache pip
        uses: actions/cache@v2
        env:
          cache-name: cache-pip
        with:
          path: ~/.local
          key: ${{runner.os }}-build-${{ env.cache-name }}
      - name: Install python dependencies
        uses: ./.github/actions/pip_installation
      - name: Make with pyccel
        run: |
          make LANGUAGE=c pycc
      - name: Unit tests
        uses: ./.github/actions/pytest_run

  Numba:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Cache pip
        uses: actions/cache@v2
        env:
          cache-name: cache-pip
        with:
          path: ~/.local
          key: ${{runner.os }}-build-${{ env.cache-name }}
      - name: Install python dependencies
        uses: ./.github/actions/pip_installation
      - name: Make with numba
        run: |
          make ACC=numba numba
      - name: Unit tests
        uses: ./.github/actions/pytest_run

  Pythran:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Cache pip
        uses: actions/cache@v2
        env:
          cache-name: cache-pip
        with:
          path: ~/.local
          key: ${{runner.os }}-build-${{ env.cache-name }}
      - name: Install python dependencies
        uses: ./.github/actions/pip_installation
      - name: Make with pyccel
        run: |
          make ACC=pythran pythran
      - name: Unit tests
        uses: ./.github/actions/pytest_run

  Pep8:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install python dependencies
        run: |
            python -m pip install autopep8
      - name: Check for pep changes
        run: |
            if [[ $(autopep8 -r --diff pygyro/) ]]
            then
              echo "Please run autopep8 to clean up formatting"
              exit 1
            fi
